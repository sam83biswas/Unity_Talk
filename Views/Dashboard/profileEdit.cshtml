@model UnityTalk.vireModel.UserProfileViewModel

@{
    ViewBag.Title = "Edit Profile";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="~/Content/css/profileEdit.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cccloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</head>
<body>

    <!------ Include the above in your HEAD tag ---------->

    <div class="emp-profile">
        @using (Html.BeginForm("profileEdit", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-4">
                    <div class="profile-img">

                            <img src="@Url.Content(Model.UserImgPath)" />
                        
                        <div class="file btn btn-lg btn-primary">
                            <i class="bi bi-pencil-square Pic-Change-Logo"></i>
                            <input type="file" name="UserImg" />
                            @Html.HiddenFor(model => model.UserImgPath)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="profile-head">
                        <h3>
                            My Profile
                        </h3>

                        <div class="col-md-6">
                            @if (Model.UserStatus == true)
                            {
                                <h6 style="background-color: #4AD295;">Active</h6>
                            }
                            else
                            {
                                <h6 style="background-color: #DC3545;">Away</h6>
                            }
                        </div>
                        <p class="proile-rating">No. of groups: <span>10</span></p>
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Details</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">

                </div>
                <div class="col-md-8">
                    <div class="tab-content profile-tab" id="myTabContent">
                        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                            <div class="row">
                                <div class="col-md-6">
                                    <label>@Html.DisplayNameFor(model => Model.Uid)</label>
                                </div>
                                <div class="col-md-6">
                                    <p>@Html.DisplayFor(model => Model.Uid)</p>
                                    @Html.HiddenFor(model => model.Uid)
                                </div>
                            </div>
                            <div class="row except">
                                <div class="col-md-6">
                                    <label>@Html.DisplayNameFor(model => Model.UserName)</label>
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "editinput" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="row except">
                                <div class="col-md-6">
                                    <label>@Html.DisplayNameFor(model => Model.Name)</label>
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "editinput" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label>@Html.DisplayNameFor(model => Model.Email)</label>
                                </div>
                                <div class="col-md-6">
                                    <p>@Html.DisplayFor(model => Model.Email)</p>
                                    @Html.HiddenFor(model => model.Email)
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <label>@Html.DisplayNameFor(model => Model.UserStatus)</label>
                                </div>
                                <div class="stscontainer col-md-6">

                                    @*<label>
                                          @Html.RadioButtonFor(model => model.UserStatus, true)
                                          <span>Active</span>
                                      </label>
                                      <label>
                                          @Html.RadioButtonFor(model => model.UserStatus, false)
                                          <input type="radio" name="userStatus">
                                          <span>Away</span>
                                      </label>*@


                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.UserStatus)
                                            @Html.ValidationMessageFor(model => model.UserStatus, "", new { @class = "text-danger" })
                                        </div>

                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="buttons">
                        <button class="saveBtn usebuttons"  type="submit">
                            <p class="txts">Save</p>
                        </button>
                        <button class="cancelBtn usebuttons" onclick="window.location.href='@Url.Action("viewProfile", "Dashboard", new {UserId = Model.Uid})'">
                            <p class="txts cancel">Cancel</p>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            let activeNavLinks = document.querySelectorAll('.nav-link.active');

            activeNavLinks.forEach(function (link) {
                link.classList.remove('active');
            });
            let dashboardElement = document.querySelector('.navDashboard-l');

            if (dashboardElement) {
                dashboardElement.classList.add('active');
            }
        });
    </script>
</body>
</html>