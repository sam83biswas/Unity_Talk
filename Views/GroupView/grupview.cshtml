@model UnityTalk.viewModel.GroupView

@{
    ViewBag.Title = "Group View";
}

<head>
    <link rel="stylesheet" href="~/Content/css/grupview.css" />
</head>


<main>
    <div class="groupEntryCont">

        <div class="GroupNavbar">
            <div class="GroupNavIcons">
                <div class="GrpNavactive GroupnavAll Groupnavopt" onclick="window.location.href ='@Url.Action("grupview", "GroupView", new {grpid = Model.Group.GrpId})'">
                    <div class="GroupNavIconback">
                        <img class="GroupNavIcon" src="~/Content/assets/IndexImages/SeakerIcon.png">
                    </div>
                    <p class="GroupIconText">All</p>
                </div>

                <div class=" GroupnavFile Groupnavopt" onclick="window.location.href ='@Url.Action("fileView", "File", new {grpid = Model.Group.GrpId})'">
                    <div class="GroupNavIconback">
                        <i class="fa-regular fa-file-lines GroupNavIcon"></i>

                    </div>
                    <p class="GroupIconText">Files</p>
                </div>
                <div class="GroupnavChat Groupnavopt" onclick="window.location.href ='@Url.Action("Chat", "Chat", new {grpid = Model.Group.GrpId})'">
                    <div class="GroupNavIconback">
                        <i class="bi bi-chat-text-fill GroupNavIcon"></i>

                    </div>
                    <p class="GroupIconText">Chats</p>
                </div>
                <div class="GroupnavMeet Groupnavopt" onclick="window.location.href ='@Url.Action("meetingView", "Meeting", new {grpId = Model.Group.GrpId})'">
                    <div class="GroupNavIconback">
                        <i class="fa-solid fa-video GroupNavIcon"></i>
                    </div>
                    <p class="GroupIconText">Meetings</p>
                </div>
            </div>
        </div>
        <div class="GroupDetailsMembaerCont">
            <div class="groupBannerCont">
                <div class="groupBannerImg"
                     style="background-image:url(@Url.Content(Model.Group.GroupImgTable.GrpImgPath))">
                    <button class="GroupNavSettings" onclick="window.location.href = '@Url.Action("grupEdit", "Group", new {grpId = Model.Group.GrpId})'">
                        <div class="GroupNavSettingSign">
                            <i class="fa-solid fa-pen"></i>
                        </div>

                        <div class="GroupCustomizeText">Customize</div> @* For Custimize Button *@
                    </button>
                    <div class="GroupInfodiv" onclick="window.location.href = '@Url.Action("grpInfo", "GroupView", new {grpId = Model.Group.GrpId})'">
                        @* For Group info Button *@
                        <i class="fa-solid fa-circle-info info" style="color: white;"></i>
                    </div>
                </div>
                <div class="GroupNameAllDeatails">
                    <div class="GroupAdminName">
                        <div class="GroupNameInfo">
                            <div class="groupbannertext">
                                <h4>@Html.DisplayFor(modelItem => Model.Group.GrpName)</h4>
                            </div>
                            <div class="GroupModeDiv">
                                @if (Model.Group.GrpMode)
                                {
                                    <div class="GroupModeDivIcon">
                                        <i class="fa-solid fa-lock-open"></i>
                                    </div>
                                    <div class="GroupModeDivText">
                                        <p>Public</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="GroupModeDivIcon">
                                        <i class="fa-solid fa-lock"></i>
                                    </div>
                                    <div class="GroupModeDivText">
                                        <p>Private</p>
                                    </div>
                                }
                            </div>
                        </div>
                        <h7 class="GrpAdmin">@Html.DisplayFor(model => Model.Group.UserTable.Name)</h7>
                    </div>
                    <div class="GroupLinkCopy">
                        <div class="copyCont">
                            <div class="Copytext">
                                <p class="copied" id="codeTocpy">@Html.DisplayFor(modelItem => Model.Group.GrpCode)</p>
                                <button class="copy" id="grpCpyBtn">
                                    <span class="tooltip"
                                          data-text-initial="Copy to clipboard"
                                          data-text-end="Copied!"></span>
                                    <span>
                                        <svg class="clipboard"
                                             xmlns="http://www.w3.org/2000/svg"
                                             version="1.1"
                                             xmlns:xlink="http://www.w3.org/1999/xlink"
                                             width="20"
                                             height="20"
                                             x="0"
                                             y="0"
                                             viewBox="0 0 6.35 6.35"
                                             style="enable-background:new 0 0 512 512"
                                             xml:space="preserve">
                                        <g>
                                        <path d="M2.43.265c-.3 0-.548.236-.573.53h-.328a.74.74 0 0 0-.735.734v3.822a.74.74 0 0 0 .735.734H4.82a.74.74 0 0 0 .735-.734V1.529a.74.74 0 0 0-.735-.735h-.328a.58.58 0 0 0-.573-.53zm0 .529h1.49c.032 0 .049.017.049.049v.431c0 .032-.017.049-.049.049H2.43c-.032 0-.05-.017-.05-.049V.843c0-.032.018-.05.05-.05zm-.901.53h.328c.026.292.274.528.573.528h1.49a.58.58 0 0 0 .573-.529h.328a.2.2 0 0 1 .206.206v3.822a.2.2 0 0 1-.206.205H1.53a.2.2 0 0 1-.206-.205V1.529a.2.2 0 0 1 .206-.206z"
                                              fill="currentColor"></path>
                                        </g>
                                      </svg>
                                        <svg class="checkmark"
                                             xmlns="http://www.w3.org/2000/svg"
                                             version="1.1"
                                             xmlns:xlink="http://www.w3.org/1999/xlink"
                                             width="18"
                                             height="18"
                                             x="0"
                                             y="0"
                                             viewBox="0 0 24 24"
                                             style="enable-background:new 0 0 512 512"
                                             xml:space="preserve">
                                        <g>
                                        <path d="M9.707 19.121a.997.997 0 0 1-1.414 0l-5.646-5.647a1.5 1.5 0 0 1 0-2.121l.707-.707a1.5 1.5 0 0 1 2.121 0L9 14.171l9.525-9.525a1.5 1.5 0 0 1 2.121 0l.707.707a1.5 1.5 0 0 1 0 2.121z"
                                              fill="currentColor"
                                              data-original="#000000"></path>
                                        </g>
                                      </svg>
                                    </span>
                                </button>
                            </div>
                        </div>
                        <div class="SharelinkDiv">
                            <div class="Sharelinktext">
                                <p>Share Group Link : </p>
                            </div>
                            <a class="ShareIcon" href='https://wa.me/?text=@Model.Group.GrpCode' target="_blank">
                                <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="27" height="27" viewBox="0 0 48 48">
                                    <path fill="#fff" d="M4.868,43.303l2.694-9.835C5.9,30.59,5.026,27.324,5.027,23.979C5.032,13.514,13.548,5,24.014,5c5.079,0.002,9.845,1.979,13.43,5.566c3.584,3.588,5.558,8.356,5.556,13.428c-0.004,10.465-8.522,18.98-18.986,18.98c-0.001,0,0,0,0,0h-0.008c-3.177-0.001-6.3-0.798-9.073-2.311L4.868,43.303z"></path>
                                    <path fill="#fff" d="M4.868,43.803c-0.132,0-0.26-0.052-0.355-0.148c-0.125-0.127-0.174-0.312-0.127-0.483l2.639-9.636c-1.636-2.906-2.499-6.206-2.497-9.556C4.532,13.238,13.273,4.5,24.014,4.5c5.21,0.002,10.105,2.031,13.784,5.713c3.679,3.683,5.704,8.577,5.702,13.781c-0.004,10.741-8.746,19.48-19.486,19.48c-3.189-0.001-6.344-0.788-9.144-2.277l-9.875,2.589C4.953,43.798,4.911,43.803,4.868,43.803z"></path>
                                    <path fill="#cfd8dc" d="M24.014,5c5.079,0.002,9.845,1.979,13.43,5.566c3.584,3.588,5.558,8.356,5.556,13.428c-0.004,10.465-8.522,18.98-18.986,18.98h-0.008c-3.177-0.001-6.3-0.798-9.073-2.311L4.868,43.303l2.694-9.835C5.9,30.59,5.026,27.324,5.027,23.979C5.032,13.514,13.548,5,24.014,5 M24.014,42.974C24.014,42.974,24.014,42.974,24.014,42.974C24.014,42.974,24.014,42.974,24.014,42.974 M24.014,42.974C24.014,42.974,24.014,42.974,24.014,42.974C24.014,42.974,24.014,42.974,24.014,42.974 M24.014,4C24.014,4,24.014,4,24.014,4C12.998,4,4.032,12.962,4.027,23.979c-0.001,3.367,0.849,6.685,2.461,9.622l-2.585,9.439c-0.094,0.345,0.002,0.713,0.254,0.967c0.19,0.192,0.447,0.297,0.711,0.297c0.085,0,0.17-0.011,0.254-0.033l9.687-2.54c2.828,1.468,5.998,2.243,9.197,2.244c11.024,0,19.99-8.963,19.995-19.98c0.002-5.339-2.075-10.359-5.848-14.135C34.378,6.083,29.357,4.002,24.014,4L24.014,4z"></path>
                                    <path fill="#40c351" d="M35.176,12.832c-2.98-2.982-6.941-4.625-11.157-4.626c-8.704,0-15.783,7.076-15.787,15.774c-0.001,2.981,0.833,5.883,2.413,8.396l0.376,0.597l-1.595,5.821l5.973-1.566l0.577,0.342c2.422,1.438,5.2,2.198,8.032,2.199h0.006c8.698,0,15.777-7.077,15.78-15.776C39.795,19.778,38.156,15.814,35.176,12.832z"></path>
                                    <path fill="#fff" fill-rule="evenodd" d="M19.268,16.045c-0.355-0.79-0.729-0.806-1.068-0.82c-0.277-0.012-0.593-0.011-0.909-0.011c-0.316,0-0.83,0.119-1.265,0.594c-0.435,0.475-1.661,1.622-1.661,3.956c0,2.334,1.7,4.59,1.937,4.906c0.237,0.316,3.282,5.259,8.104,7.161c4.007,1.58,4.823,1.266,5.693,1.187c0.87-0.079,2.807-1.147,3.202-2.255c0.395-1.108,0.395-2.057,0.277-2.255c-0.119-0.198-0.435-0.316-0.909-0.554s-2.807-1.385-3.242-1.543c-0.435-0.158-0.751-0.237-1.068,0.238c-0.316,0.474-1.225,1.543-1.502,1.859c-0.277,0.317-0.554,0.357-1.028,0.119c-0.474-0.238-2.002-0.738-3.815-2.354c-1.41-1.257-2.362-2.81-2.639-3.285c-0.277-0.474-0.03-0.731,0.208-0.968c0.213-0.213,0.474-0.554,0.712-0.831c0.237-0.277,0.316-0.475,0.474-0.791c0.158-0.317,0.079-0.594-0.04-0.831C20.612,19.329,19.69,16.983,19.268,16.045z" clip-rule="evenodd"></path>
                                </svg>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="GroupDetailCont">

                    <div class="GroupDetail">
                        <div class="GroupDetailText">Announcments</div>
                        <div class="GroupMeetingboardIcon">
                            @if ((int)Session["Id"] == Model.Group.GrpAdminId)
                            {
                                <button onclick="hideshow()" class="AnnouncementAdd" id="AnnouncementAdd">
                                    <div class="AnnouncementAddSign">
                                        <i class="fa-solid fa-plus"></i>
                                    </div>
                                    <div class="AnnouncementAddText">Add</div>
                                </button>
                            }
                        </div>
                    </div>
                    <form action='@Url.Action("createAnnouncement","GroupView")' method="post" id="AnnouncementInput" class="AnnouncementInput">
                        @Html.AntiForgeryToken()
                        <div class="AnnouncementInputTextdiv">
                            @Html.TextAreaFor(model => Model.AnnounceModel.Cont, new { @class = "AnnouncementInputText", @placeholder = "Create a new Announcement..." })
                        </div>

                        <input type="hidden" name="grpid" value="@Model.Group.GrpId" />

                        <button class="AnnouncementSendBtn" type="submit">
                            <div class="AnnouncementSendIcon"><i class="fa-solid fa-paper-plane"></i></div>
                        </button>
                    </form>
                    <p style="color:var(--red);font-size:12px;">@Html.ValidationMessageFor(m => m.AnnounceModel.Cont)</p>
                    <div class="AnnounceDetailsCont">

                        @if (Model.AnnouncementTabl == null || Model.AnnouncementTabl.ToList().Count == 0)
                        {
                            <div class="notodoitem">
                                <img src="~/Content/assets/IndexImages/no_announcement.png" alt="No Announcement" />

                                No Announcements at This Time!
                            </div>
                        }
                        else
                        {
                            foreach (var item in Model.AnnouncementTabl)
                            {
                                <div class="AnnouncementSendDetails">
                                    <div class="AnnounceOperatingInfo">

                                        <div class="AnnouncAdminNameImg">
                                            <div class="AnnounceAdminImg TableContImgdiv">
                                                <img src="@Url.Content(item.GroupMemberTable.UserTable.UserImgPath)" class="TableContImg">
                                            </div>
                                            <div class="AdminNameDateTime">
                                                <div class="AdminUsername">
                                                    @Html.DisplayFor(modelItem => item.GroupMemberTable.UserTable.Name)
                                                </div>
                                                <div class="AnnounceDate">
                                                    <p>@Html.DisplayFor(model => item.Date)</p>
                                                    <div class="AnnounceTime">
                                                        <p>@Html.DisplayFor(modelItem => item.FormattedTime)</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        @if ((int)Session["Id"] == Model.Group.GrpAdminId)
                                        {
                                            <div class="AnnouncedeleteIcon" onclick="window.location.href = '@Url.Action("removeAnnouncement", "GroupView", new {id = item.AunId})'">
                                                <i class="fa-regular fa-trash-can"></i>
                                            </div>
                                        }
                                    </div>
                                    <div class="AnnounceDetails">
                                        <div class="AnnounceText">

                                            <p>@Html.Raw(item.Cont?.Replace("\n", "<br>")) </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>


                </div>
            </div>
            <div class="GroupMembers">
                <div class="GroupMembertextdiv">
                    <span class="GroupMembertext">Group Members</span>
                </div>
                <hr class="MemberdivLine">

                <div class="GroupMembersTable">
                    <div class="GroupMembersTableheading">
                        <div class="GroupMembersTableheadingName">
                            <p>Name</p>
                        </div>
                        <div class="GroupMembersTableheadingStatus">
                            <p>Status</p>
                        </div>
                    </div>
                    @foreach (var item in Model.GroupMemberTabl)
                    {
                        <div class="TableCont" onclick="window.location.href = '@Url.Action("viewProfile", "Dashboard", new {UserId = item.UserTable.Uid})'">
                            <div class="TableContDetails">
                                <div class="TableContImgdiv">
                                    <img src="@Url.Content(item.UserTable.UserImgPath)" class="TableContImg">
                                </div>
                                <div class="TableContUserDetails">
                                    <p class="TableContDetailsName">
                                        @Html.DisplayFor(modelItem => item.UserTable.Name)
                                    </p>
                                    <p class="TableContDetailsUserName">
                                        @Html.DisplayFor(modelItem => item.UserTable.UserName)
                                    </p>
                                </div>
                            </div>
                            @if (item.UserTable.UserStatus)
                            {
                                <div class="GroupMemberStatusOn">
                                    <p>Active</p>
                                </div>
                            }
                            else
                            {
                                <div class="GroupMemberStatusOff">
                                    <p>Away</p>
                                </div>
                            }

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>
<script src="~/Content/js/grupview.js"></script>
@section scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            let activeNavLinks = document.querySelectorAll('.nav-link.active');

            activeNavLinks.forEach(function (link) {
                link.classList.remove('active');
            });
            let dashboardElement = document.querySelector('.navAllGroups-l');

            if (dashboardElement) {
                dashboardElement.classList.add('active');
            }
        });
    </script>

}






